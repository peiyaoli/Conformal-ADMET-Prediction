from abc import ABC, abstractmethod
from typing import Optional

import numpy as np
from rdkit import Chem

from chempropv2.featurizers.molgraph import MolGraph


class MolGraphFeaturizerBase(ABC):
    @abstractmethod
    def __call__(self, *args, **kwargs) -> MolGraph:
        pass

    @property
    @abstractmethod
    def shape(self) -> tuple[int, int]:
        """the feature dimension of the atoms and bonds, respectively, of `MolGraph`s generated by
        this featurizer"""


class MoleculeFeaturizerBase(MolGraphFeaturizerBase):
    """A `MoleculeFeaturizer` featurizes RDKit molecules into `MolGraph`s"""

    @abstractmethod
    def __call__(
        self,
        mol: Chem.Mol,
        atom_features_extra: Optional[np.ndarray] = None,
        bond_features_extra: Optional[np.ndarray] = None,
    ) -> MolGraph:
        """Featurize the input molecule into a molecular graph

        Parameters
        ----------
        mol : Chem.Mol
            the input molecule
        atom_features_extra : Optional[np.ndarray], default=None
            Additional features to concatenate to the calculated atom features
        bond_features_extra : Optional[np.ndarray], default=None
            Additional features to concatenate to the calculated bond features

        Returns
        -------
        MolGraph
            the molecular graph of the molecule
        """


class ReactionFeaturizerBase(MolGraphFeaturizerBase):
    """A `ReactionFeaturizer` featurizes reactions (i.e., a 2-tuple of reactant and product
    molecules) into `MolGraph`s"""

    @abstractmethod
    def __call__(
        self,
        reaction: tuple[Chem.Mol, Chem.Mol],
        atom_features_extra: Optional[np.ndarray] = None,
        bond_features_extra: Optional[np.ndarray] = None,
    ) -> MolGraph:
        """Featurize the input reaction into a molecular graph

        Parameters
        ----------
        reaction : tuple[Chem.Mol, Chem.Mol]
            a 2-tuple of atom-mapped rdkit molecules, where the 0th element is the reactant and the
            1st element is the product
        atom_features_extra : Optional[np.ndarray], default=None
            *UNSUPPORTED* maintained only to maintain parity with the method signature of the
            `MoleculeFeaturizer`
        bond_features_extra : Optional[np.ndarray], default=None
            *UNSUPPORTED* maintained only to maintain parity with the method signature of the
            `MoleculeFeaturizer`

        Returns
        -------
        MolGraph
            the molecular graph of the reaction
        """

from typing import Optional

from chempropv2.featurizers.molgraph import MolGraph
from chempropv2.featurizers.atom import AtomFeaturizer, AtomFeaturizerBase
from chempropv2.featurizers.bond import BondFeaturizer, BondFeaturizerBase


class MolGraphFeaturizerMixin:
    def __init__(
        self,
        atom_featurizer: Optional[AtomFeaturizerBase] = None,
        bond_featurizer: Optional[BondFeaturizerBase] = None,
        bond_messages: bool = True,
    ):
        self.atom_featurizer = atom_featurizer or AtomFeaturizer()
        self.bond_featurizer = bond_featurizer or BondFeaturizer()
        self.atom_fdim = len(self.atom_featurizer)
        self.bond_fdim = len(self.bond_featurizer)
        self.bond_messages = bond_messages

    def __call__(self, *args, **kwargs) -> MolGraph:
        return self.featurize(*args, **kwargs)

    @property
    def shape(self) -> tuple[int, int]:
        """the feature dimension of the atoms and bonds, respectively, of `MolGraph`s generated by
        this featurizer"""
        return self.atom_fdim, self.bond_fdim
